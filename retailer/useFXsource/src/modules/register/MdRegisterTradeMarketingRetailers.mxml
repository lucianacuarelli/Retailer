<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:ui="devdoo.register.layout.ui.*"
		  width="100%" height="100%" 
		  creationComplete="create()">
	
	<s:layout>
		<s:HorizontalLayout gap="10" paddingBottom="10" paddingTop="10"
							paddingLeft="2" paddingRight="2"/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import devdoo.fx.UseFX;
			import devdoo.register.layout.groups.tabs.GrRegisterTabAddress;
			import devdoo.register.layout.groups.tabs.GrRegisterTabCorporate;
			import devdoo.register.layout.groups.tabs.GrRegisterTabDetail;
			import devdoo.register.layout.groups.tabs.GrRegisterTabEmail;
			import devdoo.register.layout.groups.tabs.GrRegisterTabGroups;
			import devdoo.register.layout.groups.tabs.GrRegisterTabPersonal;
			import devdoo.register.layout.groups.tabs.GrRegisterTabPhone;
			import devdoo.register.layout.groups.tabs.GrRegisterTabSocialMedia;
			//------------------------------------------------------------------
			//
			//  Attributes
			//
			//------------------------------------------------------------------
			//----------------------------------
			//  useFX
			//----------------------------------
			/**
			 *  Instância da classe de gerenciamento de módulo.  
			 */  
			public var useFX:UseFX;
			
			//----------------------------------
			//  create
			//----------------------------------
			/**
			 * Instância o componente de registro e define as configurações default  
			 * 
			 *  @return void
			 */
			public function create():void
			{
				//Recupera a instância da classe de gerenciamento da módulo
				useFX = UseFX.startModule('Trade Marketing - Retailers');
				
				//Configura o componete de gerenciamento de registro
				registerTradeMarketingRetailers.start(UiRegister.PERSONAL)
								.defaultProfile('4')
								.profileManagerIds([1,3,4])
								.disableInitialPreference()
								.addTabDefault('Geral', GrRegisterTabPersonal, GrRegisterTabCorporate, UiRegister.PERSONAL)
								.addTab('Grupos', GrRegisterTabGroups, UiRegister.PERSONAL_AND_COMMERCIAL)
								.addTab('Endereço', GrRegisterTabAddress, UiRegister.PERSONAL_AND_COMMERCIAL)
								.addTab('Telefones', GrRegisterTabPhone, UiRegister.PERSONAL_AND_COMMERCIAL)
								.addTab('Detalhes', GrRegisterTabDetail, UiRegister.PERSONAL_AND_COMMERCIAL)
								.addTab('Mídia Social', GrRegisterTabSocialMedia, UiRegister.PERSONAL_AND_COMMERCIAL)
								.addTab('E-Mails', GrRegisterTabEmail, UiRegister.PERSONAL_AND_COMMERCIAL)
								.pageSize(25)
								.create()
								.populate();
				
				registerRetailers.start(UiRegister.COMMERCIAL)
					.disableAddButton()
								.defaultProfile('5')
								.profileManagerIds([1,3])
								.disableInitialPreference()
								.addTabDefault('Geral', GrRegisterTabPersonal, GrRegisterTabCorporate, UiRegister.PERSONAL)
								.addTab('Grupos', GrRegisterTabGroups, UiRegister.PERSONAL_AND_COMMERCIAL)
								.addTab('Endereço', GrRegisterTabAddress, UiRegister.PERSONAL_AND_COMMERCIAL)
								.addTab('Telefones', GrRegisterTabPhone, UiRegister.PERSONAL_AND_COMMERCIAL)
								.addTab('Detalhes', GrRegisterTabDetail, UiRegister.PERSONAL_AND_COMMERCIAL)
								.addTab('Mídia Social', GrRegisterTabSocialMedia, UiRegister.PERSONAL_AND_COMMERCIAL)
								.addTab('E-Mails', GrRegisterTabEmail, UiRegister.PERSONAL_AND_COMMERCIAL)
								.pageSize(25)
								.create()
								.populate();
				
				//Adiciona os eventos pré-definidos
				addEvents();	
			}
			
			//----------------------------------
			//  addEvents
			//----------------------------------
			/**
			 *  Adiciona eventos aos componentes pré-definidos.
			 * 
			 *  @return void
			 */
			private function addEvents():void
			{
				registerTradeMarketingRetailers.addEventListener(UiRegister.SELECTION_CHANGE, showParent);
				registerRetailers.addEventListener(UiRegister.SELECTION_CHANGE, showDetail);
			}		
			
			//----------------------------------
			//  showParent
			//----------------------------------
			/**
			 * Consulta a base de dados registros relacionados com a tabela pai.  
			 * 
			 *  @return void
			 */
			protected function showParent(event:Event):void
			{
				registerRetailers.populateParent(registerTradeMarketingRetailers.selectedItem.USE_REGISTER_id);
			}
			
			//----------------------------------
			//  showDetail
			//----------------------------------
			/**
			 * Consulta na base de dados detalhes do registro indicado.  
			 * 
			 *  @return void
			 */
			protected function showDetail(event:Event):void
			{
				//UseDebug.p(registerRetailers.selectedItem);
				registerInfo.showDetail(registerRetailers.selectedItem);
			}
		]]>
	</fx:Script>
	<s:SkinnableContainer width="100%" height="100%"
						  skinClass="devdoo.sk.container.white.SkContainerCornerRight">
		<s:layout>
			<s:VerticalLayout gap="25"/>
		</s:layout>
		<ui:UiRegister id="registerTradeMarketingRetailers" title="Trade Marketing - Retailers" subTitle="Gerencia todos registros de Trade Marketing e Retailers relacionados"/>
		<ui:UiRegister id="registerRetailers" title="Retailers" subTitle="Gerencia a lista de todos os Retailers registradas no sistema"/>
	</s:SkinnableContainer>
	
	<ui:UiRegisterInfo id="registerInfo"/>
</s:Module>