<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:ui="devdoo.register.layout.ui.*"
		  xmlns:userInterface="modules.lg.layout.userInterface.*"
		  width="100%" height="100%" 
		  creationComplete="create()">
	<s:layout>
		<s:HorizontalLayout gap="10" paddingBottom="10" paddingTop="10"
							paddingLeft="2" paddingRight="2"/>
	</s:layout>
	<fx:Script>
		<![CDATA[
			import devdoo.fx.UseDAO;
			import devdoo.fx.UseFX;
			import devdoo.register.layout.groups.tabs.GrRegisterTabAddress;
			import devdoo.register.layout.groups.tabs.GrRegisterTabCorporate;
			import devdoo.register.layout.groups.tabs.GrRegisterTabDetail;
			import devdoo.register.layout.groups.tabs.GrRegisterTabEmail;
			import devdoo.register.layout.groups.tabs.GrRegisterTabGroups;
			import devdoo.register.layout.groups.tabs.GrRegisterTabPersonal;
			import devdoo.register.layout.groups.tabs.GrRegisterTabPhone;
			import devdoo.register.layout.groups.tabs.GrRegisterTabSocialMedia;
			
			//------------------------------------------------------------------
			//
			//  Attributes
			//
			//------------------------------------------------------------------
			//----------------------------------
			//  useFX
			//----------------------------------
			/**
			 *  Instância da classe de gerenciamento de módulo.  
			 */  
			public var useFX:UseFX;
			
			//----------------------------------
			//  create
			//----------------------------------
			/**
			 * Instância o componente de registro e define as configurações default  
			 * 
			 *  @return void
			 */
			public function create():void
			{
				//Recupera a instância da classe de gerenciamento da módulo
				useFX = UseFX.startModule('Ambos');
				
				registerBoth.start(UiRegister.PERSONAL_AND_COMMERCIAL)
					.profileManagerIds([1,3,4])
					.statusManagerIds([1])
					.addTabDefault('Geral', GrRegisterTabPersonal, GrRegisterTabCorporate, UiRegister.PERSONAL)
					.addTab('Grupos', GrRegisterTabGroups, UiRegister.PERSONAL_AND_COMMERCIAL)
					.addTab('Endereço', GrRegisterTabAddress, UiRegister.PERSONAL_AND_COMMERCIAL)
					.addTab('Telefones', GrRegisterTabPhone, UiRegister.PERSONAL_AND_COMMERCIAL)
					.addTab('Detalhes', GrRegisterTabDetail, UiRegister.PERSONAL_AND_COMMERCIAL)
					.addTab('Mídia Social', GrRegisterTabSocialMedia, UiRegister.PERSONAL_AND_COMMERCIAL)
					.addTab('E-Mails', GrRegisterTabEmail, UiRegister.PERSONAL_AND_COMMERCIAL)
					//.addFilter(UiFilter,advancedFilter)
					//.itemRenderer(IrRegisterList)
					//.validateCpf()
					.showTags(uiRegisterListTags)
					.pageSize(25)
					.create()
					.populate();
				
				//Adiciona os eventos pré-definidos
				addEvents();		
			}
			
			//----------------------------------
			//  addEvents
			//----------------------------------
			/**
			 *  Adiciona eventos aos componentes pré-definidos.
			 * 
			 *  @return void
			 */
			private function addEvents():void
			{
				//Evento disparado sempre que a seleção de colaborador é alterada
				registerBoth.addEventListener(UiRegister.SELECTION_CHANGE, showDetail);
			}			
			
			//----------------------------------
			//  showDetail
			//----------------------------------
			/**
			 * Consulta na base de dados detalhes do registro indicado.  
			 * 
			 *  @return void
			 */
			protected function showDetail(event:Event):void
			{
				registerInfo.showDetail(registerBoth.selectedItem);
				//collaboratorsSelectCompany.selectedRegister(registerCollaborator.selectedItem);
				//areaTradeMarketingSelect.selectedRegister(registerCollaborator.selectedItem);
			}
			
			//----------------------------------
			//  refresh
			//----------------------------------
			/**
			 *  Atualiza o datagrid de colaboradores para evitar inconsistência 
			 *  de dados visuais. Quando você acabava de atualizar a rede do colaborador,
			 *  ela era atualizada no banco. Porém o datagrid tinha sido populado
			 *  antes da inserção desse novo registro. Desta forma, quando você 
			 *  selecionava outro registro e retornava a selecionar o préviamente
			 *  selecionado, nessa consulta, ele não possuia rede. Mesmo depois
			 *  de termos adicionado ela à ele. 
			 *  Então, é necessário atualizar o datagrid de colaboradores.  
			 * 
			 *  @return void
			 */
			public function refresh():void
			{
				//Atualiza a coleção
				/*var selectedItem:Object = registerCollaborator.dataRegister.acRegister.getItemAt(registerCollaborator.dgRegister.selectedIndex);
				selectedItem.USE_REGISTER_parent_id = collaboratorsSelectCompany.ddRetailer.selectedItem.register_id;
				registerCollaborator.dataRegister.acRegister.setItemAt(selectedItem,registerCollaborator.dgRegister.selectedIndex);
				*/
			}
			
			//----------------------------------
			//  advancedFilter
			//----------------------------------
			/**
			 *  Callback da consulta de filtragem.  
			 *  Recebe um dao vindo diretamente do DataRegister, adiciona uma nova
			 *  condição e retorna o UseDAO modificado.
			 * 
			 *  @return void
			 */
			public function advancedFilter():UseDAO
			{
				//Recupera UseDAO
				var daoRegisterFilter:UseDAO = registerBoth.dataRegister.daoRegisterFilter;
				//Recupera informações do data
				var data:* = registerBoth.filterComponent.data;
				
				//Adiciona nova condição ao DAO - Nesse caso sem ser algo do data
				daoRegisterFilter.where("USE_REGISTER.nickname LIKE '%"+ data.nickname +"%'");
				daoRegisterFilter.where("USE_REGISTER_PERSONAL.name LIKE '%"+ 'Lu' +"%'");
				
				return daoRegisterFilter;
			}
		]]>
	</fx:Script>
	
	<s:SkinnableContainer width="100%" height="100%"
						  skinClass="devdoo.sk.container.white.SkContainerCornerRight">
		<ui:UiRegister id="registerBoth" title="Ambos" subTitle="Todos registros registrados no sistema"/>
	</s:SkinnableContainer>
	
	<ui:UiRegisterInfo id="registerInfo"/>
	<s:Group width="150" height="100%">
		<s:Rect width="100%" height="100%" topLeftRadiusX="5" bottomLeftRadiusX="5">
			<s:fill>
				<s:SolidColor color="#FFFFFF"/>
			</s:fill>
		</s:Rect>
		<ui:UiRegisterListTags id="uiRegisterListTags" top="10" left="10" bottom="10"
							   right="10"/>
	</s:Group>
</s:Module>