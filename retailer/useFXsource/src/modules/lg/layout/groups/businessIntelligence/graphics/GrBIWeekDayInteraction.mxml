<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		  creationComplete="create()" xmlns:ui="devdoo.ui.*">
	<fx:Script>
		<![CDATA[
			import modules.lg.data.DataBusinessIntelligence;
			
			//------------------------------------------------------------------
			//
			//  Attributes
			//
			//------------------------------------------------------------------
			//----------------------------------
			//  dataBusinessIntelligence
			//----------------------------------
			/**
			 *  Instância da classe de gerenciamento de consultas.  
			 */  
			public var dataBusinessIntelligence:DataBusinessIntelligence;
			
			//------------------------------------------------------------------
			//
			//  Methods
			//
			//------------------------------------------------------------------
			//----------------------------------
			//  create
			//----------------------------------
			/**
			 *  Evento executado no momento em que a aplicação for criada completamente.
			 * 
			 *  @return void  
			 */	
			public function create() : void
			{
				//Instância a classe gerenciadora de consultas
				dataBusinessIntelligence = new DataBusinessIntelligence();
				//Recupera as informações necessárias da base de dados
				dataBusinessIntelligence.populate('dashboardTotalInteractionWeekDay',populateResult);
			}
			
			//----------------------------------
			//  populateResult
			//----------------------------------
			private var isPopulated:Boolean = false;
			/**
			 *  Evento de retorno da consulta.
			 * 
			 *  @return void  
			 */	
			public function populateResult(useResult:*) : void
			{
				for each (var item:Object in useResult.weekDayReport) 
				{
					switch(item.week_day)
					{
						case 0:
						{
							item.week_day = 'Domingo';
							break;
						}
						case 1:
						{
							item.week_day = 'Segunda';
							break;
						}
						case 2:
						{
							item.week_day = 'Terça';
							break;
						}
						case 3:
						{
							item.week_day = 'Quarta';
							break;
						}
						case 4:
						{
							item.week_day = 'Quinta';
							break;
						}
						case 5:
						{
							item.week_day = 'Sexta';
							break;
						}
						default:
						{
							item.week_day = 'Sábado';
							break;
						}
					}
				}
				barChart.dataProvider = useResult.weekDayReport;
				
				if(!isPopulated){
					uiMonthPeriod.dateStart = useResult.minDate[0].date;
					uiMonthPeriod.dateFinish = useResult.maxDate[0].date;
					isPopulated = true;
				}
			}
			
			//----------------------------------
			//  filter
			//----------------------------------
			/**
			 *  Evento executado no momento em que a aplicação for criada completamente.
			 * 
			 *  @return void  
			 */	
			protected function filter(event:MouseEvent):void
			{
				//Recupera as informações necessárias da base de dados
				dataBusinessIntelligence.populate('dashboardTotalInteractionWeekDay',populateResult,uiMonthPeriod.dateStart,uiMonthPeriod.dateFinish);
			}
			
			//----------------------------------
			//  clear
			//----------------------------------
			/**
			 *  Evento executado no momento em que a aplicação for criada completamente.
			 * 
			 *  @return void  
			 */	
			protected function clear(event:MouseEvent):void
			{
				uiMonthPeriod.dateStart = '';
				uiMonthPeriod.dateFinish = '';
				isPopulated = false;
				//Recupera as informações necessárias da base de dados
				dataBusinessIntelligence.populate('dashboardTotalInteractionWeekDay',populateResult,uiMonthPeriod.dateStart,uiMonthPeriod.dateFinish);
			}
		]]>
	</fx:Script>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace lg "modules.lg.*";
		@namespace layout "modules.lg.layout.*";
		@namespace ui "devdoo.ui.*";
		
		mx|BarChart {
			fontFamily:Arial;
			fontSize:11;
			color:#aeaeae;
		}
		
		mx|Legend
		{
			fontFamily:Arial;
			fontSize:11;
			color:#aeaeae;
		}
		
		s|Panel
		{
			fontFamily:Arial;
			fontSize:11;
			color:#aeaeae;
			skinClass: ClassReference("skins.panel.SkPanelBlackSkin");
		}
		.myStyle {
			gridDirection:"both"; 
			/* horizontalShowOrigin:true; 
			horizontalTickAligned:true; 
			horizontalChangeCount:1; */  
			/* horizontalFill:#666666; */ 
			horizontalAlternateFill:#282828; 
			
			verticalShowOrigin:false; 
			verticalTickAligned:true;  
			verticalChangeCount:1; 
		}  
		
		
	</fx:Style>
	
	<fx:Declarations>
		<mx:NumberFormatter id="numberFormatter" precision="3" />
		
		<!-- Define custom colors for use as column fills. -->
		<mx:SolidColor id="colorA" color="#e2fa00" alpha="0.95"/>
		<mx:SolidColor id="colorB" color="#65fb00" alpha="0.95"/>
		<mx:SolidColor id="colorC" color="#00dca5" alpha="0.95"/>
		
		<!-- Define custom Strokes for the columns. -->
		<mx:SolidColorStroke id="lineColorA" color="#e2fa00" weight="1" alpha="0"/>
		<mx:SolidColorStroke id="lineColorB" color="#65fb00" weight="1" alpha="0"/>		
		<mx:SolidColorStroke id="lineColorC" color="#00dca5" weight="1" alpha="0"/>	
		
		<!--Linhas separadores de grupos de dados-->	
		<mx:SolidColorStroke color="0x616161" weight="2" id="axis" alpha="0.8"/>
		<mx:SolidColorStroke color="0x616161" weight="1" id="ticks" alpha="0.8"/>
		<mx:SolidColorStroke color="0x616161" weight="1" id="mticks" alpha="0.8"/>
		
		<!-- Background element array. -->
		<fx:Array id="bgChart">
			<mx:GridLines styleName="myStyle">
				<mx:horizontalStroke>
					<mx:SolidColorStroke weight="1" color="0x666666" alpha="0.4"/>
				</mx:horizontalStroke>
				<mx:verticalStroke>
					<mx:SolidColorStroke weight="1" color="0x666666" alpha="0.3"/>
				</mx:verticalStroke>
			</mx:GridLines>
		</fx:Array>		
	</fx:Declarations>
	
	<s:BorderContainer width="100%">
		<s:layout>
			<s:HorizontalLayout paddingBottom="5" paddingLeft="10" paddingRight="10" paddingTop="5"
								verticalAlign="middle"/>
		</s:layout>
		<ui:UiMonthPeriod id="uiMonthPeriod"/>
		<s:Button id="btClear" label="Limpar" click="clear(event)"/>
		<s:Button id="btFilter" label="Filtrar" click="filter(event)"/>
	</s:BorderContainer>
	
	<s:HGroup width="100%" height=" 100%">
		<!--Componente de gráfico-->
		<s:Panel width="100%" height="100%" color="#D6D6D6" skinClass="skins.panel.SkPanelBlackSkin"
				 title="Total de Interações por dia da semana">
			<s:layout>
				<s:HorizontalLayout/>
			</s:layout>
			<mx:BarChart id="barChart" x="1" y="-138" width="100%" height="100%"
						 backgroundElements="{bgChart}" paddingBottom="10"
						 paddingLeft="10" paddingRight="10" paddingTop="10" 
						 showDataTips="true">
				
				<!--Data provider da coluna horizontal-->
				<mx:horizontalAxis>
					<mx:LinearAxis id="hAxis" baseAtZero="true"/>
				</mx:horizontalAxis>
				
				<!--Item renderer da coluna horizontal-->
				<mx:horizontalAxisRenderers>
					<mx:AxisRenderer axis="{hAxis}"
									 canDropLabels="false" 
									 visible="true"
									 axisStroke="{axis}"
									 placement="bottom"
									 minorTickPlacement="inside" 
									 minorTickLength="2" 
									 tickLength="5">
						<mx:tickStroke>{ticks}</mx:tickStroke>
						<mx:minorTickStroke>{mticks}</mx:minorTickStroke>
					</mx:AxisRenderer>
				</mx:horizontalAxisRenderers>
				
				<!--Data provider da linha vertical-->
				<mx:verticalAxis>
					<mx:CategoryAxis id="vAxis"
									 categoryField="week_day" />
				</mx:verticalAxis>
				
				<!--Item renderer da linha vertical-->
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer axis="{vAxis}"
									 canDropLabels="false" visible="true"
									 axisStroke="{axis}"
									 placement="bottom"
									 minorTickPlacement="inside" 
									 minorTickLength="2" 
									 tickLength="5"
									 tickPlacement="inside">
						<mx:tickStroke>{ticks}</mx:tickStroke>
						<mx:minorTickStroke>{mticks}</mx:minorTickStroke>
					</mx:AxisRenderer>
				</mx:verticalAxisRenderers>
				
				<!--Itens dentro de um grupo-->
				<mx:series>
					<mx:BarSeries 
						id="csDownload" 
						xField="total_download"
						displayName="Download por dia" 
						fill="{colorA}"
						stroke="{lineColorA}"/>
					
					<mx:BarSeries 
						id="csInteraction" 
						xField="total_interaction"
						displayName="Visualização por dia" 
						fill="{colorB}"
						stroke="{lineColorB}"/>
				</mx:series>
			</mx:BarChart>
		</s:Panel> 
		<!--Componente de legenda-->
		<s:Panel x="883" y="0" width="150" height="100" color="#D6D6D6"
				 skinClass="skins.panel.SkPanelBlackSkin" title="Legenda">
			<mx:Legend x="10" dataProvider="{barChart}"/>
		</s:Panel>
	</s:HGroup>
</s:VGroup>
