<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
					  xmlns:s="library://ns.adobe.com/flex/spark"
					  xmlns:mx="library://ns.adobe.com/flex/mx"
					  height="190"
					  creationComplete="create()"
					  skinClass="devdoo.sk.container.white.SkContainerCornerLeft">
	
	<fx:Script>
		<![CDATA[
			import devdoo.fx.UseComboBox;
			import devdoo.fx.UseFX;
			import devdoo.register.model.UseRegister;
			
			import modules.lg.data.DataProducts;
			
			import spark.events.IndexChangeEvent;

			//------------------------------------------------------------------
			//
			//  Attributes
			//
			//------------------------------------------------------------------
			//----------------------------------
			//  useFX
			//----------------------------------
			/**
			 *  Instância da classe de gerenciamento de módulo.  
			 */  
			public var useFX:UseFX;
			
			//----------------------------------
			//  selectedItem
			//----------------------------------
			/**
			 *  NOTDOC.  
			 */
			public function get selectedItem():*
			{
				return useFX.select(ddRetailer,'register_id');
			}
			
			//----------------------------------
			//  this._dataProducts
			//----------------------------------
			/**
			 *  Gerênciador de dados de produtos.  
			 */  
			public var _dataProducts:DataProducts;
			
			//----------------------------------
			//  selectedRegister
			//----------------------------------
			private var _itemRegister:Object;
			/**
			 *  Recebe os dados do registro selecionado.
			 */
			public function selectedRegister(itemRegister:Object):void
			{
				this._itemRegister = itemRegister;
				ddRetailer.selectedIndex = -1;
				UseComboBox.selectLabelField(ddRetailer,'register_id', this._itemRegister.USE_REGISTER_parent_id);
				ddRetailer.enabled = true;
			}
			
			//------------------------------------------------------------------
			//
			//  Methods
			//
			//------------------------------------------------------------------
			//----------------------------------
			//  create
			//----------------------------------
			/**
			 *  Evento executado no momento em que a aplicação for criada completamente.
			 * 
			 *  Recupera a instância da classe de gerenciamento da módulo, 
			 *  Popula os componentes pré-definidos,
			 *  Adiciona os eventos pré-definidos,
			 *  Configura permissão de acesso.
			 * 
			 *  @return void  
			 */
			private function create() : void
			{
				//Recupera a instância da classe de gerenciamento da popup
				useFX = UseFX.start();
				
				//Cria gerenciador de dados de produto
				this._dataProducts = new DataProducts();
				
				//Popula os componentes pré-definidos
				this._dataProducts.populateRetailer(populateRetailerResult)
					
				//Adiciona os eventos pré-definidos
				addEvents();				
			}
			
			//----------------------------------
			//  populateRetailerResult
			//----------------------------------
			/**
			 *  Recupera a lista de todos os retailers
			 * 
			 *  @return void  
			 */	
			private function populateRetailerResult(useResult:*):void
			{
				ddRetailer.dataProvider = useFX.populateCollection(useResult.useRegister);
			}		
			
			//----------------------------------
			//  addEvents
			//----------------------------------
			/**
			 *  Adiciona eventos aos componentes pré-definidos.
			 * 
			 *  @return void
			 */	
			private function addEvents():void
			{
				btOpenModule.addEventListener(MouseEvent.CLICK, openModule);
				btSave.addEventListener(MouseEvent.CLICK, saveUpdate);
				ddRetailer.addEventListener(IndexChangeEvent.CHANGE, updateButton);
			}
			
			//----------------------------------
			//  openModule
			//----------------------------------    	
			/**
			 * Abre módulo para edição de novo retailer
			 *  
			 * @return void  
			 */	
			private function openModule(event:MouseEvent):void
			{
				UseFX.openModule("register", "MdRegisterRetailers");
			}
			
			//----------------------------------
			//  openModule
			//----------------------------------    	
			/**
			 * Abre módulo para edição de novo retailer
			 *  
			 * @return void  
			 */				
			private function saveUpdate(event:MouseEvent):void
			{
				var useRegister:UseRegister = new UseRegister();
					useRegister.parent_id = useFX.select(ddRetailer, 'register_id');
					useRegister.update('id='+this._itemRegister.USE_REGISTER_id, saveUpdateResult);
			}
			
			//----------------------------------
			//  saveUpdateResult
			//----------------------------------    	
			/**
			 * Configura botão salvar após atualizar o datagrid
			 *  
			 * @return void  
			 */		
			protected function saveUpdateResult(useResult:Object):void
			{
				btSave.enabled = false;
				btSave.buttonMode = false;
				
				//Atualizar dataGrid
				parentDocument.refresh();
			}
			
			//----------------------------------
			//  updateButton
			//----------------------------------    	
			/**
			 * Atualiza botão de salvar quando um retailher é selecionado
			 *  
			 * @return void  
			 */		
			protected function updateButton(event:IndexChangeEvent):void
			{
				btSave.enabled = true;
				btSave.buttonMode = true;
			}
			
			//----------------------------------
			//  reset
			//----------------------------------
			/**
			 *  Limpa todos os componentes.  
			 * 
			 *  @return void
			 */
			public function reset():void
			{
				ddRetailer.selectedIndex = -1;
				ddRetailer.enabled = false;
				btSave.enabled = true;
			}
		]]>
	</fx:Script>
	
	<s:Label id="tiTitle" x="20" top="0" height="25" styleName="title" text="Retailer"/>
	<s:Label id="tiSubTitle" x="20" top="24" height="12" styleName="subTitle"
			 text="Colaborador relacionado a empresa "/>
	<s:SkinnableContainer left="0" right="0" top="43" bottom="0"
						  skinClass="devdoo.sk.container.gray.SkContainerCorner">
		<s:layout>
			<s:VerticalLayout gap="20"/>
		</s:layout>
		<s:DropDownList id="ddRetailer" y="48" left="20" right="20" width="100%" enabled="false"
						labelField="fancy_name"/>
		
		<s:BorderContainer x="102" y="349" width="100%" height="51" backgroundColor="#3f3933"
						   borderVisible="false" cornerRadius="5">
			
			<s:filters>
				<s:DropShadowFilter alpha="0.6" angle="45.0" blurX="4.0" blurY="4.0" color="#000000"
									distance="4.0" hideObject="false" inner="true" knockout="false"
									quality="2" strength="1"/>
			</s:filters>
			
			<s:layout>
				<s:HorizontalLayout paddingLeft="10" paddingRight="10" verticalAlign="middle"/>
			</s:layout>
			<s:Spacer width="100%" height="10"/>
			<s:Button id="btOpenModule" x="291" y="3" height="40" label="Abrir módulo retailer"
					  buttonMode="true" enabled="true" useHandCursor="true"/>
			<s:Button id="btSave" height="40" label="Salvar" enabled="false"
					  useHandCursor="true"/>
		</s:BorderContainer>
	</s:SkinnableContainer>
	
</s:SkinnableContainer>